다음 영수증 텍스트를 분석하여, 이 영수증이 어떤 타입인지 판별한 후 해당 타입에 맞는 XML TYPE 블록을 하나만 생성해주세요.

### 목적
- 이 영수증 텍스트를 기반으로 정확한 메뉴 파싱을 위한 XML 규칙(TYPE)을 생성합니다.
- 응답은 반드시 하나의 <TYPE> 블록만 포함해야 하며, 해당 영수증과 정확히 매칭되는 규칙을 생성해야 합니다.

### 지시 사항
1. 영수증의 TYPE을 아래 중에서 정확히 하나 선택해 생성하세요:
   - 추가-주방주문서 (contain="추가-")
   - 신규-주방주문서 (contain="신규-")
   - 취소-주방주문서 (contain="취소-")
   - 환불-주방주문서 (contain="환불-")

2. 영수증 내 다음 필드의 위치를 파악하고 적절한 파싱 규칙을 작성하세요:
   - 주문번호: <ORDER_ID>
   - 주문시간: <DATE>
   - POS 번호: <POS>
   - 대기번호 (선택적): <PAGER>
   - 메뉴 항목 영역: <MENU> 내부에 <NAME>, <COUNT>, <STATUS> 구성

3. 메뉴 항목은 실제 텍스트를 분석하여 정확한 인덱스(idx_begin, idx_end)를 설정해야 합니다.
   - NAME은 일반적으로 맨 앞 또는 가장 긴 텍스트입니다.
   - COUNT는 수량 (예: 1, 2, 3 등)
   - STATUS는 상태 (예: 대기, 완료 등)

4. 다음은 출력되는 XML의 정확한 형식입니다.
   - **이 구조를 변경하지 마세요. 태그 이름, 대소문자, 속성명을 반드시 지켜주세요.**

```xml
<TYPE name="[타입명]" contain="[패턴]">
  <ORDER_ID contain="[키워드]" begin="[시작단어]" min="10" />
  <DATE contain="[키워드]" begin="[시작단어]" min="16" />
  <POS contain="[키워드]" begin="[시작단어]" min="2" />
  <PAGER contain="[키워드]" begin="[시작단어]" min="3" /> <!-- 선택사항 -->
  <MENU begin="[시작마커]" end="[종료마커]" skip="[건너뛸마커]" action="prev">
    <NAME idx_begin="0" idx_end="2" />
    <COUNT idx_begin="-2" />
    <STATUS idx_begin="-1" />
  </MENU>
</TYPE>

5.주의사항

<PARSER>, <NORMAL> 태그는 생성하지 마세요.

생성 결과는 반드시 <TYPE>로 시작해서 </TYPE>로 끝나야 하며, 형식 오류 없이 완전한 XML 블록이어야 합니다.

모든 태그는 닫힘 태그 포함 필수입니다 (예: <POS ... />).

AI 응답이 파싱 시스템에서 사용될 수 있도록 정해진 스키마 형식을 준수해야 합니다.

--- 영수증 텍스트 시작 ---
{receipt_text}
--- 영수증 텍스트 끝 ---