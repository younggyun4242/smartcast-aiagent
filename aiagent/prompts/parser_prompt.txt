다음 영수증 텍스트를 분석하여, 이 영수증이 어떤 타입인지 판별한 후 해당 타입에 맞는 XML PARSER 블록을 하나만 생성해주세요.

### 목적
- 이 영수증 텍스트를 기반으로 정확한 메뉴 파싱을 위한 XML 규칙(PARSER)을 생성합니다.
- 응답은 반드시 하나의 <PARSER> 블록만 포함해야 하며, 해당 영수증과 정확히 매칭되는 규칙을 생성해야 합니다.

### 지시 사항
1. **PARSER 속성 분석 및 설정**:
   - `cut`: 영수증에서 특정 위치부터 자를 문자열 (예: "n", "" 등)
   - `remove`: 파싱 전 제거할 불필요한 문자들 (예: "▶|\\x10|\\r|!", "a!0|a1|..." 등)
   - `replace`: 파싱 전 치환할 문자 패턴 (예: "[BIG]=[NOR]|[VER]=[NOR]" 등)
   - 영수증의 실제 내용을 분석하여 적절한 전처리 규칙을 결정하세요.

2. **TYPE 내부 구조**:
   - 영수증의 내용을 분석하여 TYPE을 아래 중에서 정확히 하나 선택해 생성하세요:
     - 신규: 새로운 주문을 나타내는 영수증 (예: "신규", "주문", "접수" 등의 키워드)
     - 변경: 기존 주문을 수정하는 영수증 (예: "변경", "수정", "추가", "부분취소", "일부취소", "테이블이동", "자리이동" 등의 키워드)
     - 취소: 주문을 취소하는 영수증 (예: "취소", "환불", "삭제" 등의 키워드)
     - 없음: 위 세 가지 중 어느 것에도 해당하지 않는 경우
   
   - contain 속성값은 영수증 텍스트에서 실제로 발견되는 키워드를 사용하세요
   - 예시: contain="신규-", contain="변경", contain="취소-", contain="주방주문서" 등

3. 영수증 내 다음 필드의 위치를 파악하고 적절한 파싱 규칙을 작성하세요:
   - 주문번호: <ORDER_ID> - **반드시 regex 속성 사용**
   - 주문시간: <DATE> - **반드시 regex 속성 사용** (있는 경우)
   - POS 번호: <POS> - **반드시 regex 속성 사용** (있는 경우)
   - 테이블 번호(선택적): <TABLE_ID> - **반드시 regex 속성 사용**
   - 대기번호 (선택적): <PAGER>
   - 메뉴 항목 영역: <MENU> 내부에 <NAME>, <COUNT>, <STATUS> 구성

4. **REGEX 패턴 작성 규칙**:
   - 주문번호: `regex="\\[주문번호\\]\\s*(\\d{{4}}-\\d{{4}})"`와 같이 정확한 패턴 매칭
   - 주문시간: `regex="\\[주문시간\\]\\s*(\\d{{4}}-\\d{{2}}-\\d{{2}}\\s+\\d{{2}}:\\d{{2}}:\\d{{2}})"`
   - POS: `regex="POS:(\\d+)"`
   - 테이블: `regex="\\[테이블\\]\\s*(.+?)\\s*\\["`와 같이 테이블 정보 추출
   - **contain, begin, min 속성 절대 사용하지 마세요**

5. **메뉴 인덱스 설정 규칙**:
   - NAME: `idx_begin="0" idx_end="-2"` (맨 앞부터 뒤에서 2번째 전까지)
   - COUNT: `idx_begin="-2"` (뒤에서 2번째)
   - STATUS: `idx_begin="-1"` (맨 마지막)
   - **양수 인덱스는 NAME의 시작에만 사용하고, 끝은 반드시 음수 사용**

6. **정확한 XML 출력 형식** (이 구조를 절대 변경하지 마세요):

```xml
<PARSER
    name="deepkds"
    id="orderParser"
    type="a"
    cut="[분석된_cut_값]"
    remove="[분석된_remove_패턴]"
    replace="[분석된_replace_패턴]">

  <NORMAL contain="신규|변경|취소|주문|접수|수정|추가|환불|삭제|주방주문서|영수증" count="1">
    <TYPE name="[타입명]" contain="[패턴]">
      <ORDER_ID regex="[정규식패턴]" />
      <TABLE_NO regex="[정규식패턴]" />
      <DATE regex="[정규식패턴]" />
      <POS regex="[정규식패턴]" />
      <PAGER contain="[키워드]" begin="[시작단어]" min="3" />
      <MENU begin="[시작마커]" end="[종료마커]" skip="[건너뛸마커]">
        <NAME idx_begin="0" idx_end="-2" />
        <COUNT idx_begin="-2" />
        <STATUS idx_begin="-1" />
      </MENU>
    </TYPE>
  </NORMAL>
</PARSER>
```

7. **전처리 속성 결정 가이드라인**:
   - `cut`: 영수증에서 특정 문자열 이후 부분을 제거해야 하는 경우 설정 (보통 "" 또는 특정 마커)
   - `remove`: 영수증에 있는 노이즈 문자들 분석 (제어문자, 특수기호 등)
   - `replace`: 영수증에서 일관되지 않은 문자 표현을 통일해야 하는 경우 설정

8. **중요한 주의사항**:
   - 완전한 `<PARSER>` 태그부터 `</PARSER>`까지 생성하세요
   - `contain="..."` `begin="..."` `min="..."` 조합 사용 금지
   - **반드시 `regex="..."`만 사용하세요**
   - `idx_end` 값은 반드시 음수여야 합니다 (예: `-2`, `-1`)
   - 모든 태그는 self-closing 형태 (예: `<ORDER_ID ... />`)
   - 영수증에서 실제 패턴을 찾아 정확한 regex 작성
   - TABLE_ID는 반드시 포함해야 합니다 (테이블 정보가 있는 경우)

9. **영수증 타입 판단 가이드라인**:
   - **신규**: 영수증에 "신규", "주문", "접수", "신규주문", "새주문" 등이 포함된 경우
   - **변경**: 영수증에 "변경", "수정", "추가", "옵션추가", "메뉴추가" 등이 포함된 경우
   - **취소**: 영수증에 "취소", "환불", "삭제", "주문취소", "결제취소" 등이 포함된 경우
   - **없음**: 위 키워드가 없거나 "영수증", "계산서" 등만 있는 경우
   
   contain 속성에는 실제 영수증에서 발견되는 정확한 텍스트 패턴을 사용하세요.

10. **영수증 텍스트 분석 방법**:
   - 실제 텍스트에서 `[주문번호]`, `[주문시간]`, `[테이블]`, `POS:` 등의 키워드 위치 확인
   - 해당 키워드 뒤에 오는 데이터의 실제 형식 파악
   - 메뉴 섹션의 시작(`메  뉴  명`)과 끝(`[주방메모]`) 마커 확인
   - 각 메뉴 라인의 구조 분석 (이름, 수량, 상태 순서)
   - 영수증에 포함된 노이즈 문자나 제어문자 패턴 분석
   - 테이블 번호 형식 분석 (예: `[테이블] 기본-102`)

--- 영수증 텍스트 시작 ---
{receipt_text}
--- 영수증 텍스트 끝 ---